@model AddressBook.Models.ContactView

@{
    ViewBag.Title = "AddContact";
}

<h2>AddContact</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>ContactView</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactName)
            @Html.ValidationMessageFor(model => model.ContactName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactSurname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactSurname)
            @Html.ValidationMessageFor(model => model.ContactSurname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactMidName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactMidName)
            @Html.ValidationMessageFor(model => model.ContactMidName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactPhoneNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactPhoneNumber)
            @Html.ValidationMessageFor(model => model.ContactPhoneNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactAddress)
            @Html.ValidationMessageFor(model => model.ContactAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactEmail)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ContactEmail)
            @Html.ValidationMessageFor(model => model.ContactEmail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ContactTypeID)
        </div>
        @*<div class="editor-field">
           
            @Html.DropDownListFor(model => model.ContactTypeID, new SelectList(new[] {"1", "2", "3"}))
            @Html.ValidationMessageFor(model => model.ContactTypeID)
        </div>*@
          <div class="editor-field">
            @*TODO: remake Dropdown list*@
            @Html.DropDownListFor(model => model.ContactTypeID, ViewBag.Types as SelectList)
            @Html.ValidationMessageFor(model => model.ContactTypeID)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
